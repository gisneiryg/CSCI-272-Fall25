/*
// september 8th, 2025

# include  <iostream>
# include <vector>
using namespace std;

int main(){
    // vector initialization
    
    vector < double > prices = {1,2,3,4,5};

    //add vakyes to the end of the prices vector
    prices.push_back(10);
    prices.push_back(50);
    prices.push_back(11);

    // accessing and modifuying
    double total = prices[0] + prices[1] + prices[2];

    cout << "Total = $ " << total << endl;

    //

    prices.insert(prices.begin(), 20); // begin is to insert a function at the begining

    
    cout << "First item: " << prices.front() << endl;
    cout << "Last item: " << prices.back() << endl;
    cout << "Total size of my vector (prices) " << prices.size() << endl;

    //accesin and modifying
    double total2 = prices[0] + prices[1] + prices[2];

    cout << " Total = $ " << total2 << endl;

    

    
    return 0;
    
}
*/
/*

        // september 10th, 2025

       //  size_t // it rerepsents the sizes of anything(objects) in terms og bytes, it does not have a limit
    // but if the memor is 64 gb then thats the limit.
        // unsigned int// it only stores positive numbers, from 0 
// interator - 
 #include <iostream>
 #include <vector>
 using namespace std;

int main (){
    /*
    // we dont mention size in vector because is dynamic, it cana grow and shrink.
    vector <int> numbers = {10,20,30,40,50};

    cout << "First element : " << numbers.front()<< endl;
    cout << "Last element : " << numbers.back() << endl;
    cout << "Second element :" << numbers[1] << endl;
    cout << "Thirs element :" << numbers.at(2) << endl;

    // vector modification

    numbers[1] = 35;
    numbers.at(2) = 35;// 
    numbers.front() = 5; //.front replaces the first element of the vector
    numbers.back() = 5; //.back it replaces the last element of the veector
    numbers.push_back(272);// it pushed back, meaning it added the 272 to the end of the vector

    cout << "\n\n====== After Modifications======\n\n";

    cout << "First element : " <<numbers.front() << endl;
    cout << "Last element : " << numbers.back() << endl;
    cout << "Second element : " << numbers[1] << endl;
    cout << "Third element : "<< numbers.at(2) << endl;

*/
/*
    // vector nad realocation-capacity and reserve
    vector<int> numbers; // empty vector

    // because there is no first and last element it pics a random number to be first and last
    // if my reserve is 2, and i have 3 elements it will resrve 4 ( it reserves 2 by 2, or whatever the reserve is )

    numbers.reserve(2);
    cout << "First element : " << numbers.front() << endl;
    cout << "Last elemrnt :" << numbers.back() << endl;

    cout << "Reserved : " << endl << "Size : " << numbers.size() << "capacity :" << numbers.capacity()
 << endl << endl;

    numbers.push_back(10);
     cout << "after adding 10" << endl << "Size : " << numbers.size() <<"capacity :" << numbers.capacity()
         << endl << endl ;
    cout << "First element : " << numbers.front() << endl;
    cout << "Last element :" << numbers.back() << endl;

    cout << "first el: " << numbers.front() << endl;
    numbers.push_back(20);
     cout << "after adding 20" << endl << "Size : " << numbers.size() << "capacity :" << numbers.capacity()
         << endl << endl ;
    cout << "First element : " << numbers.front() << endl;
    cout << "Last element :" << numbers.back() << endl;

    numbers.push_back(40);
     cout << "after adding 40" << endl << "Size : " << numbers.size() << "capacity :" << numbers.capacity()
         << endl << endl ;
    cout << "First element : " << numbers.front() << endl;
    cout << "Last element :" << numbers.back() << endl;

    // numbers.shrink_to_fit(); it will shrink the capacity to the size of the vector, this is usedful to save memory
    // if you reserved too much memory.
    
*/ /*
